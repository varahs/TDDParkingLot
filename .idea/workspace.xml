<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="f05a0d68-69a4-40e3-a038-4559a5ab6b15" name="Default Changelist" comment="[varsha] add. Notify Owner when parking lot full">
      <change afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/uiDesigner.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/Owner.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/5.2.1/executionHistory/executionHistory.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/5.2.1/executionHistory/executionHistory.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/5.2.1/executionHistory/executionHistory.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/5.2.1/executionHistory/executionHistory.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/5.2.1/fileHashes/fileHashes.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/5.2.1/fileHashes/fileHashes.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/5.2.1/fileHashes/fileHashes.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/5.2.1/fileHashes/fileHashes.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/5.2.1/fileHashes/resourceHashesCache.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/5.2.1/fileHashes/resourceHashesCache.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/5.2.1/javaCompile/classAnalysis.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/5.2.1/javaCompile/classAnalysis.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/5.2.1/javaCompile/jarAnalysis.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/5.2.1/javaCompile/jarAnalysis.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/5.2.1/javaCompile/javaCompile.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/5.2.1/javaCompile/javaCompile.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/5.2.1/javaCompile/taskHistory.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/5.2.1/javaCompile/taskHistory.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/java/main/Car.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/java/main/Car.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/java/main/Consumer.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/java/main/Consumer.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/java/main/DuplicateException.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/java/main/DuplicateException.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/java/main/NotAvailableEception.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/java/main/NotAvailableEception.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/java/main/ParkingFullException.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/java/main/ParkingFullException.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/java/main/ParkingLot.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/java/main/ParkingLot.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/java/main/ParkingLotException.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/java/test/ParkingLotTest$Park.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/java/test/ParkingLotTest$Park.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/java/test/ParkingLotTest.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/java/test/ParkingLotTest.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/reports/tests/test/classes/ParkingLotTest$Park.html" beforeDir="false" afterPath="$PROJECT_DIR$/build/reports/tests/test/classes/ParkingLotTest$Park.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/reports/tests/test/index.html" beforeDir="false" afterPath="$PROJECT_DIR$/build/reports/tests/test/index.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/reports/tests/test/packages/default-package.html" beforeDir="false" afterPath="$PROJECT_DIR$/build/reports/tests/test/packages/default-package.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/test-results/test/TEST-ParkingLotTest$Park.xml" beforeDir="false" afterPath="$PROJECT_DIR$/build/test-results/test/TEST-ParkingLotTest$Park.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/test-results/test/binary/results.bin" beforeDir="false" afterPath="$PROJECT_DIR$/build/test-results/test/binary/results.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/Car.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Car.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/Consumer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Consumer.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/DuplicateException.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/DuplicateException.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/NotAvailableEception.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/NotAvailableEception.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/ParkingFullException.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/ParkingFullException.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/ParkingLot.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/ParkingLot.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/ParkingLotException.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/ParkingLotTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/ParkingLotTest.java" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <projects_view>
          <tree_state>
            <expand />
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1RgRR7lOpsY1cWtbjcuO8rvxE6D" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="PropertiesComponent">
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="settings.editor.selected.configurable" value="reference.projectsettings.compiler.annotationProcessors" />
  </component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Gradle.Park.givenVehiclesToParkingLot_WhenPark_ThenNotAvailable">
    <configuration name="Consumer" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="Consumer" />
      <module name="untitled1.main" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="OwnerTest.givenNotifyOwnerWhenParkingLotFulCount_WhenPark_ThenShouldCount" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="--tests &quot;ParkingLotTest$OwnerTest.givenNotifyOwnerWhenParkingLotFulCount_WhenPark_ThenShouldCount&quot;" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":cleanTest" />
            <option value=":test" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <GradleScriptDebugEnabled>false</GradleScriptDebugEnabled>
      <method v="2" />
    </configuration>
    <configuration name="OwnerTest.givenNotifyOwnerWhenParkingLotFull_WhenPark_ThenShouldNotify" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="--tests &quot;ParkingLotTest$OwnerTest.givenNotifyOwnerWhenParkingLotFull_WhenPark_ThenShouldNotify&quot;" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":cleanTest" />
            <option value=":test" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <GradleScriptDebugEnabled>false</GradleScriptDebugEnabled>
      <method v="2" />
    </configuration>
    <configuration name="OwnerTest.givenParkingLotFulInformAfterFirstUnParkInform_WhenParkAndUnPark_ThenShouldCount" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="--tests &quot;ParkingLotTest$OwnerTest.givenParkingLotFulInformAfterFirstUnParkInform_WhenParkAndUnPark_ThenShouldCount&quot;" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":cleanTest" />
            <option value=":test" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <GradleScriptDebugEnabled>false</GradleScriptDebugEnabled>
      <method v="2" />
    </configuration>
    <configuration name="Park.givenVehiclesToParkingLot_WhenPark_ThenNotAvailable" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="--tests &quot;ParkingLotTest$Park.givenVehiclesToParkingLot_WhenPark_ThenNotAvailable&quot;" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":cleanTest" />
            <option value=":test" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <GradleScriptDebugEnabled>false</GradleScriptDebugEnabled>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Gradle.Park.givenVehiclesToParkingLot_WhenPark_ThenNotAvailable" />
        <item itemvalue="Gradle.OwnerTest.givenParkingLotFulInformAfterFirstUnParkInform_WhenParkAndUnPark_ThenShouldCount" />
        <item itemvalue="Gradle.OwnerTest.givenNotifyOwnerWhenParkingLotFulCount_WhenPark_ThenShouldCount" />
        <item itemvalue="Gradle.OwnerTest.givenNotifyOwnerWhenParkingLotFull_WhenPark_ThenShouldNotify" />
        <item itemvalue="Application.Consumer" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="f05a0d68-69a4-40e3-a038-4559a5ab6b15" name="Default Changelist" comment="" />
      <created>1570086741585</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1570086741585</updated>
    </task>
    <task id="LOCAL-00001" summary="[varsha] Refactor. when unpark should return unparked Object">
      <created>1570160777032</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1570160777032</updated>
    </task>
    <task id="LOCAL-00002" summary="[varsha] Refactor.After unpark should be able to park same vehicle">
      <created>1570163349762</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1570163349762</updated>
    </task>
    <option name="localTasksCounter" value="3" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="[varsha] Refactor. when unpark should return unparked Object" />
    <MESSAGE value="[varsha] Refactor.After unpark should be able to park same vehicle" />
    <MESSAGE value="[varsha] add. Notify Owner when parking lot full" />
    <option name="LAST_COMMIT_MESSAGE" value="[varsha] add. Notify Owner when parking lot full" />
  </component>
</project>